-- Version Information
-- Turtle API
apiVersion = "0.2"

function version()
  return apiVersion
end

-- Turtle item (full) detection, when farmMode is true. not fuel slot(16).
function turtfull()
	print("Checking if turtle is full and drop all items. not fuel slot(16).")
	a = turtle.getItemcount(1) b = turtle.getItemcount(2) c = turtle.getItemcount(3) d = turtle.getItemcount(4)
	e = turtle.getItemcount(5) f = turtle.getItemcount(6) g = turtle.getItemcount(7) h = turtle.getItemcount(8)
	i = turtle.getItemcount(9) j = turtle.getItemcount(10) k = turtle.getItemcount(11) l = turtle.getItemcount(12)
	m = turtle.getItemcount(13) n = turtle.getItemcount(14) o = turtle.getItemcount(15)
	if a and b and c and d and e and f and g and h and i and j and k and l and m and n and o and p == 64 then
		turtle.select(1) turtle.drop() turtle.select(2) turtle.drop() turtle.select(3) turtle.drop() turtle.select(4) turtle.drop()
		turtle.select(5) turtle.drop() turtle.select(6) turtle.drop() turtle.select(7) turtle.drop() turtle.select(8) turtle.drop()
		turtle.select(9) turtle.drop() turtle.select(10) turtle.drop() turtle.select(11) turtle.drop() turtle.select(12) turtle.drop()
		turtle.select(13) turtle.drop() turtle.select(14) turtle.drop() turtle.select(15) turtle.drop()
	end
	turtle.select(1)
	sleep(1)
end

-- Turtle drop all but fuel slot function. not fuel slot(16).
function dropall()
	print("Drop all items. nt fuel slot(16).")
	turtle.select(1) turtle.drop() turtle.select(2) turtle.drop() turtle.select(3) turtle.drop() turtle.select(4) turtle.drop()
	turtle.select(5) turtle.drop() turtle.select(6) turtle.drop() turtle.select(7) turtle.drop() turtle.select(8) turtle.drop()
	turtle.select(9) turtle.drop() turtle.select(10) turtle.drop() turtle.select(11) turtle.drop() turtle.select(12) turtle.drop()
	turtle.select(13) turtle.drop() turtle.select(14) turtle.drop() turtle.select(15) turtle.drop()
	turtle.select(1)
	sleep(1)
end

-- Needs a chest below it.
function refuel()
	print("refueling.")
	items = turtle.getItemCount(16)
	turtle.select(16)
	if items == 0 then
		print("Looking for chest below me")
		turtle.suckDown()
		turtle.refuel()
		turtle.select(1)
	else
		turtle.refuel()
		turtle.select(1)
	end
	print("Refueling done")
	sleep(1)
	term.clear()
	term.setCursorPos(1, 1)
	print("Resuming last program")
	sleep(1)
end
		

-- Turtle movements and farmMode.
function move(direction)
	if string.lower(direction) == "down" then
		if turtle.detectDown() then
			turtle.digDown()
		end
		while not turtle.down() do
			turtle.digDown()
			sleep(1)
		end
	end
	
	if string.lower(direction) == "forward" then
		if turtle.detect() then
			turtle.dig()
		end
		while not turtle.forward() do
			turtle.dig()
			sleep(1)
		end
	end
	
	if string.lower(direction) == "up" then
		if turtle.detectUp() then
			turtle.digUp()
		end
		while not turtle.up() do
			turtle.digUp()
			sleep(1)
		end
	end
	
	if string.lower(direction) == "left" then
		turtle.turnLeft()
	end
	
	if string.lower(direction) == "right" then
		turtle.turnRight()
	end
	
	-- Removing 1 by 1 pilar
	if string.lower(direction) == "pilar" then
		print("Removing pilar")
		steps = 1
		move("forward")
		while turtle.detectUp() do
			move("up", false)
			steps = steps + 1
		end
		while steps > 1 do
			move("down")
			steps = steps - 1
		end
		print("Pilar removed")
		sleep(1)
	end
end