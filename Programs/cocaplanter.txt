rednet.open("right")

local func

local lengthA = 6
local lengthB = 7
local width = 3

os.loadAPI("turt")

term.clear()
term.setCursorPos(1,1)
print("Coca planter started")
print("Waiting for command")

function done()
	turt.fuellvl()
	term.clear()
	term.setCursorPos(1,1)
	print("Cycle done waiting for next one")
end

function goback()
	turt.move("back")
	turt.move("back")
	turt.move("back")
	turt.move("left")
	turt.move("back")
	turt.move("back")
	turt.move("back")
	turt.move("right")
	turt.move("back")
	done()
end

function planter()
	turtle.place()
	for i = 1 , lengthA do
		if i~=lengthA then
			turt.move("left")
			turt.move("back")
			turt.move("right")
			turtle.place()
		end	
	end
-- Side 1
	turt.move("left")
	turt.move("back")
	turt.move("back")
	turt.move("back")
	turt.move("left")
	turt.move("back")
	turt.move("right")
	turtle.place()
	turt.move("left")
	turt.move("back")
	turt.move("right")
	turtle.place()
	turt.move("left")
	turt.move("back")
	turt.move("back")
	turt.move("back")
	turt.move("left")
	turt.move("back")
	turt.move("right")
	turtle.place()
-- Lenght 2
	for i = 1 , lengthA do
		if i~=lengthA then
			turt.move("left")
			turt.move("back")
			turt.move("right")
			turtle.place()
		end
	end
-- Side 2
	turt.move("left")
	turt.move("back")
	turt.move("back")
	turt.move("left")
	turt.move("back")
	turt.move("right")
	turtle.place()
	turt.move("left")
	turt.move("back")
	turt.move("right")
	turtle.place()
	turt.move("left")
	
	goback()
end

function follow()
	print("Command to plant initiated")
	turt.move("forward")
	turt.move("left")
	turt.move("forward")
	turt.move("right")
	turt.move("forward")
	planter()
end

while true do
   local id,msg,dist = rednet.receive()
   func = loadstring(msg.."(...)")
   setfenv(func, getfenv())
   func(id)
   rednet.send(id,"Done")
end